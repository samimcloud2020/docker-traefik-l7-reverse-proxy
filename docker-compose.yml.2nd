version: "3"
services:
  redis:
    image: redis:alpine
    ports:
      - "6379"
    networks:
      - "frontend"
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  db:
    image: postgres:9.4
    environment:
        POSTGRES_PASSWORD: mypass
        POSTGRES_HOST_AUTH_METHOD: trust
        PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - "backend"
    deploy:
      placement:
        constraints: [node.role == manager]
  vote:
    image: bretfisher/examplevotingapp_vote
    ports:
      - "5000:80"
    networks:
      - "frontend"
    depends_on:
      - "redis"
      - "traefik"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vote.rule=Host(`vote.trycloud.co.in`)"
      - "traefik.http.services.vote.loadbalancer.server.port=80"  
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
  result:
    image: bretfisher/examplevotingapp_result
    ports:
      - "5001:80"
    networks:
      - "backend"
    depends_on:
      - "db"
      - "traefik"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.result.rule=Host(`result.trycloud.co.in`)"
      - "traefik.http.services.result.loadbalancer.server.port=80"  
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  worker:
    image: bretfisher/examplevotingapp_worker
    networks:
      - "frontend"
      - "backend"
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=VOTING]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [ node.role == manager]
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /etc/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro    
    networks:
        - "frontend"
        - "backend"
networks:
    backend:
        driver: bridge
    frontend:
        driver: bridge
volumes:
    db-data:
        driver: local
